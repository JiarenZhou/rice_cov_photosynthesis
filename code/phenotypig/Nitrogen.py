import numpy as np
from scipy.stats import pearsonr, spearmanr
from sklearn.metrics import mean_squared_error

# 输入数据
X1 = np.array([37967, 44038, 58544, 59886, 103852, 103995, 112814, 134432, 148702, 151212, 151677,
               159457, 166974, 168927, 173970, 175365, 176058, 178248, 179819, 181017, 182531,
               183351, 188259, 200089, 200985, 204523, 209376, 223561, 246847, 250298, 254290,
               273180, 274658])
Y1 = np.array([109.59, -14.0292, 128.1256, 151.7184, 146.634, 419.3284, 255.6116, 345.5432, 411.5372,
               401.488, 368.8956, 423.4204, 406.67, 453.3664, 386.6192, 438.564, 467.6848, 464.9548,
               431.7924, 381.734, 478.0568, 409.4388, 273.55, 478.5796, 502.4448, 456.076, 432.9492,
               538.5588, 591.2896, 509.0416, 549.5092, 559.3764, 530.1104])

# 计算回归系数
X1_mean, Y1_mean = np.mean(X1), np.mean(Y1)
beta11 = np.sum((X1 - X1_mean) * (Y1 - Y1_mean)) / np.sum((X1 - X1_mean) ** 2)
beta10 = Y1_mean - beta11 * X1_mean

# 计算预测值
Y1_pred = beta10 + beta11 * X1

# 计算相关性指标
SSR1 = np.sum((Y1 - Y1_pred) ** 2)  # 残差平方和
SST1 = np.sum((Y1 - Y1_mean) ** 2)  # 总平方和
R2_1 = 1 - SSR1 / SST1
pearson_corr1, _ = pearsonr(X1, Y1)  # 皮尔逊相关系数
spearman_corr1, _ = spearmanr(X1, Y1)  # 斯皮尔曼等级相关系数
mse1 = mean_squared_error(Y1, Y1_pred)  # 均方误差

print(f"低氮 R^2: {R2_1:.4f}")
print(f"低氮 皮尔逊相关系数: {pearson_corr1:.4f}")
print(f"低氮 斯皮尔曼相关系数: {spearman_corr1:.4f}")
print(f"低氮 均方误差: {mse1:.4f}")

# 输入数据
X2 = np.array([37392, 145257, 193241, 232388, 240208, 256626, 300186, 320153, 347862,
               365889, 394874, 439909, 443681, 512022, 513833, 519227, 519321, 530841,
               557463, 578578, 657041, 692117, 709525, 726030, 730469, 730507, 737409,
               745827, 753251, 827190, 874143, 978222, 1274702])
Y2 = np.array([105.616, 347.5184, 458.8328, 316.5968, 537.158, 508.1736, 599.8076, 740.2588,
               405.1664, 650.2456, 702.026, 917.098, 745.708, 638.7712, 624.4576, 737.4816,
               782.278, 720.3908, 966.3652, 878.9448, 871.5332, 829.2544, 899.2608, 834.8292,
               1135.2288, 949.0128, 982.3656, 871.8724, 661.8744, 1034.3664, 901.0596,
               1083.9464, 1206.1184])

# 计算回归系数
X2_mean, Y2_mean = np.mean(X2), np.mean(Y2)
beta21 = np.sum((X2 - X2_mean) * (Y2 - Y2_mean)) / np.sum((X2 - X2_mean) ** 2)
beta20 = Y2_mean - beta21 * X2_mean

# 计算预测值
Y2_pred = beta20 + beta21 * X2

# 计算相关性指标
SSR2 = np.sum((Y2 - Y2_pred) ** 2)  # 残差平方和
SST2 = np.sum((Y2 - Y2_mean) ** 2)  # 总平方和
R2_2 = 1 - SSR2 / SST2
pearson_corr2, _ = pearsonr(X2, Y2)  # 皮尔逊相关系数
spearman_corr2, _ = spearmanr(X2, Y2)  # 斯皮尔曼等级相关系数
mse2 = mean_squared_error(Y2, Y2_pred)  # 均方误差

print(f"高氮 R^2: {R2_2:.4f}")
print(f"高氮 皮尔逊相关系数: {pearson_corr2:.4f}")
print(f"高氮 斯皮尔曼相关系数: {spearman_corr2:.4f}")
print(f"高氮 均方误差: {mse2:.4f}")
